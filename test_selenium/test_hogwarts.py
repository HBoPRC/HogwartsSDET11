# Generated by Selenium IDE

from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait


class TestHogwarts:
    # 需要自行下载对应浏览器的 driver，需要注意版本，必须使用浏览器对应版本的 driver
    # 启动 driver 后才可以执行用例
    # setup_method 是执行在用例方法前，做一些之前条件
    def setup_method(self, method):
        # 使用 Chrome 浏览器
        self.driver = webdriver.Chrome()
        # 设置浏览器的窗体大小，不是页面显示区域的大小
        self.driver.set_window_size(1280, 800)
        self.vars = {}

    # teardown_method 是执行在用例方法后，做一些清理操作
    def teardown_method(self, method):
        # 执行完用例后退出，关闭浏览器
        self.driver.quit()

    # 具体的测试用例，方法以 test 开头
    def test_test(self):
        # 打开某一个网址
        self.driver.get("https://testerhome.com/")
        # 隐式等待，这个设置是全局的，在设定的超时时间内等待对应的元素，超时会报错
        self.driver.implicitly_wait(10)
        # 寻找对应的元素，执行点击操作
        # self.driver.find_element(By.LINK_TEXT, "社团").click()
        self.driver.find_element(By.XPATH, '//a[text()="社团"]').click()
        # 显示等待，设定一个超时时间，默认每隔 0.5 秒查找一次（会直接开始找，并不是先等 0.5 秒才找），直到找到对应元素
        selector = (By.CSS_SELECTOR, '[title="霍格沃兹测试学院(hogwarts)"]')
        WebDriverWait(self.driver, 5).until(EC.element_to_be_clickable(selector)).click()
        # 进行断言，该链接是否存在与页面上并且可见
        try:
            self.driver.find_element(By.LINK_TEXT, '成员的话题列表')
            assert True
        except NoSuchElementException:
            assert False
